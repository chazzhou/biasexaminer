{"ast":null,"code":"import { DraggableLocation } from \"react-beautiful-dnd\"; // a little function to help us with reordering the result\n\nexport const reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\nexport const reorderStatement = (words, source, destination) => {\n  const current = [...words[source.droppableId]];\n  const next = [...words[destination.droppableId]];\n  const target = current[source.index]; // moving to same list\n\n  if (source.droppableId === destination.droppableId) {\n    const reordered = reorder(current, source.index, destination.index);\n    return { ...words,\n      [source.droppableId]: reordered\n    };\n  } // moving to different list\n  // remove from original\n\n\n  current.splice(source.index, 1); // insert into next\n\n  next.splice(destination.index, 0, target);\n  return { ...words,\n    [source.droppableId]: current,\n    [destination.droppableId]: next\n  };\n};","map":{"version":3,"sources":["/Users/Ckotwasinski/classes/cs338/biasexaminer/bias-frontend/src/reorder.js"],"names":["DraggableLocation","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","reorderStatement","words","source","destination","current","droppableId","next","target","index","reordered"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qBAAlC,C,CAEA;;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,IAAD,EAAOC,UAAP,EAAmBC,QAAnB,KAAgC;AACrD,QAAMC,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWL,IAAX,CAAf;AACA,QAAM,CAACM,OAAD,IAAYH,MAAM,CAACI,MAAP,CAAcN,UAAd,EAA0B,CAA1B,CAAlB;AACAE,EAAAA,MAAM,CAACI,MAAP,CAAcL,QAAd,EAAwB,CAAxB,EAA2BI,OAA3B;AAEA,SAAOH,MAAP;AACD,CANM;AAQP,OAAO,MAAMK,gBAAgB,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,WAAhB,KAAgC;AAC9D,QAAMC,OAAO,GAAG,CAAC,GAAGH,KAAK,CAACC,MAAM,CAACG,WAAR,CAAT,CAAhB;AACA,QAAMC,IAAI,GAAG,CAAC,GAAGL,KAAK,CAACE,WAAW,CAACE,WAAb,CAAT,CAAb;AACA,QAAME,MAAM,GAAGH,OAAO,CAACF,MAAM,CAACM,KAAR,CAAtB,CAH8D,CAK9D;;AACA,MAAIN,MAAM,CAACG,WAAP,KAAuBF,WAAW,CAACE,WAAvC,EAAoD;AAClD,UAAMI,SAAS,GAAGlB,OAAO,CAACa,OAAD,EAAUF,MAAM,CAACM,KAAjB,EAAwBL,WAAW,CAACK,KAApC,CAAzB;AACA,WAAO,EACL,GAAGP,KADE;AAEL,OAACC,MAAM,CAACG,WAAR,GAAsBI;AAFjB,KAAP;AAID,GAZ6D,CAc9D;AAEA;;;AACAL,EAAAA,OAAO,CAACL,MAAR,CAAeG,MAAM,CAACM,KAAtB,EAA6B,CAA7B,EAjB8D,CAkB9D;;AACAF,EAAAA,IAAI,CAACP,MAAL,CAAYI,WAAW,CAACK,KAAxB,EAA+B,CAA/B,EAAkCD,MAAlC;AAEA,SAAO,EACL,GAAGN,KADE;AAEL,KAACC,MAAM,CAACG,WAAR,GAAsBD,OAFjB;AAGL,KAACD,WAAW,CAACE,WAAb,GAA2BC;AAHtB,GAAP;AAKD,CA1BM","sourcesContent":["import { DraggableLocation } from \"react-beautiful-dnd\";\n\n// a little function to help us with reordering the result\nexport const reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nexport const reorderStatement = (words, source, destination) => {\n  const current = [...words[source.droppableId]];\n  const next = [...words[destination.droppableId]];\n  const target = current[source.index];\n\n  // moving to same list\n  if (source.droppableId === destination.droppableId) {\n    const reordered = reorder(current, source.index, destination.index);\n    return {\n      ...words,\n      [source.droppableId]: reordered,\n    };\n  }\n\n  // moving to different list\n\n  // remove from original\n  current.splice(source.index, 1);\n  // insert into next\n  next.splice(destination.index, 0, target);\n\n  return {\n    ...words,\n    [source.droppableId]: current,\n    [destination.droppableId]: next,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}